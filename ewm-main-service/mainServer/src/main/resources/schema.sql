drop table if exists event_requests, events, categories , users;

create table if not exists categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name varchar(50) NOT NULL,
    constraint pk_categories primary key (id)
);
create unique index if not exists CATEGORIES_ID_UINDEX on categories (id);
create unique index if not exists CATEGORIES_NAME_UINDEX on categories (name);

create table if not exists users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name varchar(250) NOT NULL,
    email varchar(254) NOT NULL,
    constraint pk_users primary key (id)
);
create unique index if not exists USERS_ID_UINDEX on users(id);
create unique index if not exists USERS_NAME_UINDEX on users(email);

create table if not exists events(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation varchar NOT NULL CHECK (LENGTH(annotation) >= 20 AND LENGTH(annotation) <= 2000 ),
    category_id BIGINT NOT NULL REFERENCES categories(id),
    created_on timestamp WITHOUT TIME ZONE NOT NULL,
    description VARCHAR NOT NULL CHECK (LENGTH(description) >= 20 AND LENGTH(description) <= 7000 ) ,
    event_date timestamp WITHOUT TIME ZONE NOT NULL,
    initiator_id BIGINT NOT NULL REFERENCES users(id),
    location BYTEA NOT NULL,
    paid boolean NOT NULL DEFAULT false,
    participant_limit int DEFAULT 0,
    published_on timestamp WITHOUT TIME ZONE ,
    request_moderation boolean DEFAULT true,
    state varchar NOT NULL,
    title varchar NOT NULL  CHECK (LENGTH(title) >= 3 AND LENGTH(title) <= 120 ) ,
    constraint pk_events primary key (id)
);

create table if not exists event_requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created timestamp WITHOUT TIME ZONE NOT NULL,
    event_id BIGINT NOT NULL REFERENCES events(id),
    requester_id BIGINT NOT NULL REFERENCES users(id),
    status varchar NOT NULL,
    constraint pk_event_requests primary key (id)
);